//
// Created by vlad on 28.06.19.
//
#include "../gol/gol.h"
#include <gtest/gtest.h>

static const std::vector<GameOfLife::bool_matrix> test_matr = {
    {{0, 0, 0, 1, 0, 1, 1, 1, 0, 0},
     {1, 0, 0, 0, 0, 0, 0, 0, 0, 1},
     {1, 1, 0, 1, 0, 0, 0, 0, 0, 1},
     {0, 1, 1, 1, 1, 1, 0, 1, 1, 1},
     {1, 1, 1, 1, 1, 1, 0, 1, 0, 0},
     {0, 0, 0, 1, 0, 0, 1, 0, 1, 0},
     {1, 1, 0, 1, 0, 0, 0, 1, 1, 1},
     {1, 1, 0, 1, 1, 1, 0, 1, 1, 1},
     {1, 0, 1, 1, 0, 0, 1, 0, 0, 1},
     {0, 1, 0, 1, 0, 1, 1, 1, 1, 1}},

    {{0, 0, 1, 0, 0, 1, 0, 0, 0, 0},
     {0, 1, 1, 0, 1, 0, 1, 0, 1, 1},
     {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 1, 0, 1, 0, 0},
     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 1, 1, 0, 0, 0},
     {0, 1, 0, 1, 0, 1, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 1, 0, 1, 0, 0, 0, 0, 0, 1}},
    {{0, 0, 0, 0, 1, 1, 0, 0, 1, 1},
     {0, 1, 1, 0, 1, 1, 0, 0, 0, 0},
     {0, 0, 1, 1, 1, 1, 1, 1, 1, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
     {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
     {0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
     {0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 1, 0, 0, 0, 0, 0, 0, 0}}

    ,
    {{0, 1, 1, 0, 1, 1, 0, 0, 0, 0},
     {0, 1, 1, 0, 0, 0, 0, 0, 0, 1},
     {0, 1, 1, 0, 0, 0, 1, 1, 0, 0},
     {0, 0, 0, 1, 0, 0, 0, 1, 0, 0},
     {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
     {0, 0, 0, 0, 1, 0, 1, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

    ,
    {{1, 1, 1, 1, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 1, 1, 0, 0, 0},
     {1, 1, 0, 1, 0, 0, 1, 1, 1, 0},
     {0, 0, 1, 1, 1, 0, 0, 1, 0, 0},
     {0, 0, 0, 1, 1, 0, 1, 1, 0, 0},
     {0, 0, 0, 0, 1, 0, 1, 1, 0, 0},
     {0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

    ,
    {{0, 1, 1, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 1, 1, 1, 1, 0, 0, 1},
     {0, 1, 0, 1, 0, 0, 0, 0, 1, 0},
     {0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 1, 0, 0, 0, 0, 0, 1, 0},
     {0, 0, 0, 1, 1, 0, 0, 1, 0, 0},
     {0, 0, 0, 0, 0, 1, 1, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 1, 1, 0, 0, 0, 0, 0, 0, 0}}

    ,
    {{1, 1, 0, 0, 1, 1, 0, 0, 0, 0},
     {1, 1, 0, 1, 1, 1, 0, 0, 0, 0},
     {1, 0, 0, 1, 0, 1, 0, 0, 0, 0},
     {0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 1, 1, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 1, 1, 1, 1, 1, 0, 0},
     {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 1, 1, 0, 0, 0, 0, 0, 0, 0}}

    ,
    {{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
     {0, 0, 0, 1, 0, 0, 1, 0, 0, 1},
     {1, 0, 0, 1, 0, 1, 0, 0, 0, 0},
     {0, 1, 0, 1, 1, 0, 0, 0, 0, 0},
     {0, 0, 1, 1, 0, 1, 1, 0, 0, 0},
     {0, 0, 1, 0, 0, 0, 0, 1, 0, 0},
     {0, 0, 0, 1, 0, 0, 0, 1, 0, 0},
     {0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {1, 1, 1, 0, 0, 0, 0, 0, 0, 0}}

    ,
    {{1, 1, 1, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 1, 1, 0, 0, 0},
     {1, 0, 0, 1, 0, 1, 0, 0, 0, 0},
     {0, 1, 0, 0, 0, 0, 1, 0, 0, 0},
     {0, 1, 0, 0, 0, 1, 1, 0, 0, 0},
     {0, 0, 1, 0, 1, 0, 0, 1, 0, 0},
     {0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 1, 0, 0, 0, 0, 0, 0, 0, 0}}

    ,
    {{1, 1, 1, 0, 0, 0, 0, 0, 0, 0},
     {1, 0, 1, 0, 1, 1, 1, 0, 0, 0},
     {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
     {1, 1, 1, 0, 1, 0, 1, 0, 0, 0},
     {0, 1, 1, 0, 0, 1, 1, 1, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

    ,
    {{1, 0, 1, 1, 0, 1, 0, 0, 0, 0},
     {1, 0, 1, 0, 1, 0, 1, 0, 0, 0},
     {1, 0, 1, 0, 0, 0, 0, 0, 0, 0},
     {1, 0, 1, 0, 1, 0, 0, 1, 0, 0},
     {1, 0, 1, 1, 0, 1, 0, 1, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
     {0, 1, 0, 0, 0, 0, 0, 0, 0, 0}}};

TEST(GOL, test_next) {
  GameOfLife g(test_matr[0]);
  for (int i = 1; i < test_matr.size(); ++i) {
    g.OneStep();
    ASSERT_EQ(g.get__state(), test_matr[i]);
  }
}

int main(int argc, char** argv) {
  testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}